// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

model VerificationToken {
  identifier String   @id
  token      String
  attempts   Int      @default(0)
  expires    DateTime
}

model Note {
  id            String    @id @default(cuid())
  content       String    @db.Text
  contentHtml   String    @map("content_html") @db.Text
  authorId      String    @map("author_id")
  author        User      @relation("AuthorRelation", fields: [authorId], references: [id], onDelete: Cascade)
  recipientNric String    @map("recipient_id")
  recipient     User      @relation("RecipientRelation", fields: [recipientNric], references: [nric], onDelete: Cascade)
  // To return `Date`s intact through the API we use transformers
  // https://trpc.io/docs/data-transformers
  // This is unique so it can be used for cursor-based pagination
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @default(now()) @updatedAt @map("updated_at")
  deletedAt     DateTime? @map("deleted_at") @db.Timestamp
  trigger       Trigger

  @@index([deletedAt])
  @@index([createdAt])
}

model User {
  id            String  @id @default(cuid())
  nric          String  @unique
  name          String?
  authoredNotes Note[]  @relation("AuthorRelation")
  receivedNotes Note[]  @relation("RecipientRelation")
  isDead        Boolean @default(false)
}

enum Trigger {
  DEATH
  IMMEDIATE
}
